"""
    CarbonAware.WebApi

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.carbon_aware_api import CarbonAwareApi  # noqa: E501


class TestCarbonAwareApi(unittest.TestCase):
    """CarbonAwareApi unit test stubs"""

    def setUp(self):
        self.api = CarbonAwareApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_batch_forecast_data_async(self):
        """Test case for batch_forecast_data_async

        Given an array of historical forecasts, retrieves the data that contains  forecasts metadata, the optimal forecast and a range of forecasts filtered by the attributes [start...end] if provided.  # noqa: E501
        """
        pass

    def test_get_average_carbon_intensity(self):
        """Test case for get_average_carbon_intensity

        Retrieves the measured carbon intensity data between the time boundaries and calculates the average carbon intensity during that period.  # noqa: E501
        """
        pass

    def test_get_average_carbon_intensity_batch(self):
        """Test case for get_average_carbon_intensity_batch

        Given an array of request objects, each with their own location and time boundaries, calculate the average carbon intensity for that location and time period   and return an array of carbon intensity objects.  # noqa: E501
        """
        pass

    def test_get_best_emissions_data_for_locations_by_time(self):
        """Test case for get_best_emissions_data_for_locations_by_time

        Calculate the best emission data by list of locations for a specified time period.  # noqa: E501
        """
        pass

    def test_get_current_forecast_data(self):
        """Test case for get_current_forecast_data

        Retrieves the most recent forecasted data and calculates the optimal marginal carbon intensity window.  # noqa: E501
        """
        pass

    def test_get_emissions_data_for_location_by_time(self):
        """Test case for get_emissions_data_for_location_by_time

        Calculate the best emission data by location for a specified time period.  # noqa: E501
        """
        pass

    def test_get_emissions_data_for_locations_by_time(self):
        """Test case for get_emissions_data_for_locations_by_time

        Calculate the observed emission data by list of locations for a specified time period.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
